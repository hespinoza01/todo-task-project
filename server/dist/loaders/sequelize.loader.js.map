{"version":3,"sources":["../../src/loaders/sequelize.loader.js"],"names":["taskStates","id","description","sequelizeInstance","sync","ProjectModel","belongsTo","UserModel","hasMany","TaskModel","TaskStateModel","alter","count","bulkCreate","validate"],"mappings":";;;;;;;;;;;;;;;;AACA;;AADA;AAGA;AACA,IAAMA,UAAU,GAAG,CACf;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,WAAW,EAAE;AAAtB,CADe,EAEf;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,WAAW,EAAE;AAAtB,CAFe,EAGf;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,WAAW,EAAE;AAAtB,CAHe,CAAnB;AAMA;AACA;AACA;AACA;;;;;;;uFACe,iBAAgBC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBACP,CAACA,iBAAD,IAAsB,CAACA,iBAAiB,CAACC,IADlC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAKX;AACAC,iCAAaC,SAAb,CAAuBC,iBAAvB;;AACAA,8BAAUC,OAAV,CAAkBH,oBAAlB;;AAEAI,8BAAUH,SAAV,CAAoBI,sBAApB;;AACAD,8BAAUH,SAAV,CAAoBD,oBAApB;;AACAA,iCAAaG,OAAb,CAAqBC,iBAArB,EAXW,CAaX;;;AAbW;AAAA,mBAcLN,iBAAiB,CAACC,IAAlB,CAAuB;AAAEO,cAAAA,KAAK,EAAE;AAAT,aAAvB,CAdK;;AAAA;AAAA;AAAA,mBAiBAD,uBAAeE,KAAf,EAjBA;;AAAA;AAAA;;AAAA,kCAiB4B,CAjB5B;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAkBDF,uBAAeG,UAAf,CAA0Bb,UAA1B,EAAsC;AAAEc,cAAAA,QAAQ,EAAE;AAAZ,aAAtC,CAlBC;;AAAA;AAAA,6CAqBJX,iBArBI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["// import models for sync\r\nimport { UserModel, ProjectModel, TaskStateModel, TaskModel } from '@/models'\r\n\r\n// Initial data for TaskStateModel\r\nconst taskStates = [\r\n    { id: 1, description: 'Pendiente' },\r\n    { id: 2, description: 'En proceso' },\r\n    { id: 3, description: 'Finalizado' },\r\n]\r\n\r\n/**\r\n * sync sequelize models with database\r\n * @param {Sequelize} sequelizeInstance\r\n */\r\nexport default async function (sequelizeInstance) {\r\n    if (!sequelizeInstance || !sequelizeInstance.sync) {\r\n        return\r\n    }\r\n\r\n    // Configuring model relationships\r\n    ProjectModel.belongsTo(UserModel)\r\n    UserModel.hasMany(ProjectModel)\r\n\r\n    TaskModel.belongsTo(TaskStateModel)\r\n    TaskModel.belongsTo(ProjectModel)\r\n    ProjectModel.hasMany(TaskModel)\r\n\r\n    // models sync\r\n    await sequelizeInstance.sync({ alter: false })\r\n\r\n    // Initialize models data\r\n    if ((await TaskStateModel.count()) === 0) {\r\n        await TaskStateModel.bulkCreate(taskStates, { validate: true })\r\n    }\r\n\r\n    return sequelizeInstance\r\n}\r\n"],"file":"sequelize.loader.js"}