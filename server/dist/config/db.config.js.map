{"version":3,"sources":["../../src/config/db.config.js"],"names":["dbConfig","vars","DB","db","Sequelize","NAME","USERNAME","PASSWORD","host","INSTANCE_CONNECTION_NAME","HOST","dialect","DIALECT","dialectOptions","socketPath","logging","pool","max","min","acquire","idle"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;AAEA;IACYA,Q,GAAaC,gB,CAAjBC,E;AAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,EAAE,GAAG,IAAIC,oBAAJ,CAAcJ,QAAQ,CAACK,IAAvB,EAA6BL,QAAQ,CAACM,QAAtC,EAAgDN,QAAQ,CAACO,QAAzD,EAAmE;AAC1EC,EAAAA,IAAI,EAAER,QAAQ,CAACS,wBAAT,uBACaT,QAAQ,CAACS,wBADtB,IAEAT,QAAQ,CAACU,IAH2D;AAI1EC,EAAAA,OAAO,EAAEX,QAAQ,CAACY,OAJwD;AAK1EC,EAAAA,cAAc,oBACNb,QAAQ,CAACS,wBAAT,GACE;AAAEK,IAAAA,UAAU,sBAAed,QAAQ,CAACS,wBAAxB;AAAZ,GADF,GAEE,EAHI,CAL4D;AAU1EM,EAAAA,OAAO,EAAE,KAViE;AAW1EC,EAAAA,IAAI,EAAE;AACFC,IAAAA,GAAG,EAAE,CADH;AAEFC,IAAAA,GAAG,EAAE,CAFH;AAGFC,IAAAA,OAAO,EAAE,KAHP;AAIFC,IAAAA,IAAI,EAAE;AAJJ;AAXoE,CAAnE,CAAX;eAmBejB,E","sourcesContent":["import { Sequelize } from 'sequelize'\r\nimport vars from './vars.config'\r\n\r\n// Extract db conf\r\nconst { DB: dbConfig } = vars\r\n\r\n/**\r\n * Make a sequelize instance\r\n * @param {String} username - database user\r\n * @param {String} password - database password\r\n * @param {String} database - database name\r\n * @param {String} host - database server host\r\n * @param {String} dialect - database type\r\n */\r\nconst db = new Sequelize(dbConfig.NAME, dbConfig.USERNAME, dbConfig.PASSWORD, {\r\n    host: dbConfig.INSTANCE_CONNECTION_NAME\r\n        ? `/cloudsql/${dbConfig.INSTANCE_CONNECTION_NAME}`\r\n        : dbConfig.HOST,\r\n    dialect: dbConfig.DIALECT,\r\n    dialectOptions: {\r\n        ...(dbConfig.INSTANCE_CONNECTION_NAME\r\n            ? { socketPath: `/cloudsql/${dbConfig.INSTANCE_CONNECTION_NAME}` }\r\n            : {}),\r\n    },\r\n    logging: false,\r\n    pool: {\r\n        max: 5,\r\n        min: 0,\r\n        acquire: 30000,\r\n        idle: 10000,\r\n    },\r\n})\r\n\r\nexport default db\r\n"],"file":"db.config.js"}