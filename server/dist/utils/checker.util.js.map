{"version":3,"sources":["../../src/utils/checker.util.js"],"names":["isObject","value","Object","prototype","toString","call","ommitKey","objectData","result","toOmmit","key"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACO,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AAC5B,MAAI,CAACA,KAAD,IAAUC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,KAA/B,MAA0C,iBAAxD,EAA2E;AACvE,WAAO,KAAP;AACH;;AAED,SAAO,IAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASK,QAAT,CAAkBC,UAAlB,EAA0C;AAC7C,MAAI,yBAAOA,UAAP,MAAsB,QAA1B,EAAoC;AAChC,WAAOA,UAAP;AACH,GAH4C,CAK7C;;;AACA,MAAMC,MAAM,qBAAQD,UAAR,CAAZ;;AAN6C,oCAATE,OAAS;AAATA,IAAAA,OAAS;AAAA;;AAQ7C,8BAAgBA,OAAhB,8BAAyB;AAApB,QAAIC,GAAG,eAAP;AACD,WAAOF,MAAM,CAACE,GAAD,CAAb;AACH;;AAED,SAAOF,MAAP;AACH","sourcesContent":["/**\r\n * Check if values is a js literal object\r\n * @param {Object} value\r\n * @return {Boolean}\r\n */\r\nexport function isObject(value) {\r\n    if (!value || Object.prototype.toString.call(value) !== '[object Object]') {\r\n        return false\r\n    }\r\n\r\n    return true\r\n}\r\n\r\n/**\r\n * Return a new object with ommiteds keys\r\n * @param {Object} objectData\r\n * @param  {String} toOmmit\r\n * @return {Object}\r\n */\r\nexport function ommitKey(objectData, ...toOmmit) {\r\n    if (typeof objectData !== 'object') {\r\n        return objectData\r\n    }\r\n\r\n    // create a object clon\r\n    const result = { ...objectData }\r\n\r\n    for (let key of toOmmit) {\r\n        delete result[key]\r\n    }\r\n\r\n    return result\r\n}\r\n"],"file":"checker.util.js"}