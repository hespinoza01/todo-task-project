{"version":3,"sources":["../../src/utils/auth-token.util.js"],"names":["CreateToken","payload","resolve","reject","vars","JWT_SECRET","err","token","message","DecodeToken","decoded","error","console","log"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASA,WAAT,CAAqBC,OAArB,EAA8B;AACjC,SAAO,wBAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,4BAAKF,OAAL,EAAcG,aAAKC,UAAnB,EAA+B,UAACC,GAAD,EAAMC,KAAN,EAAgB;AAC3C;AACA,UAAID,GAAJ,EAAS;AACLH,QAAAA,MAAM,CAACG,GAAG,CAACE,OAAL,CAAN;AACH;;AAEDN,MAAAA,OAAO,CAACK,KAAD,CAAP;AACH,KAPD;AAQH,GATM,CAAP;AAUH;AAED;AACA;AACA;AACA;AACA;;;AACO,SAASE,WAAT,CAAqBF,KAArB,EAA4B;AAC/B,SAAO,wBAAY,UAACL,OAAD,EAAUC,MAAV,EAAqB;AACpC,QAAI;AACA;AACA,UAAI,CAACI,KAAL,EAAY;AACRJ,QAAAA,MAAM,CAAC,oBAAD,CAAN;AACH;;AAED,gCAAOI,KAAP,EAAcH,aAAKC,UAAnB,EAA+B,UAACC,GAAD,EAAMI,OAAN,EAAkB;AAC7C;AACA,YAAIJ,GAAJ,EAAS;AACL,gBAAMA,GAAN;AACH;;AAEDJ,QAAAA,OAAO,CAACQ,OAAD,CAAP;AACH,OAPD;AAQH,KAdD,CAcE,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,wBAA4BF,KAA5B;AACAR,MAAAA,MAAM,CAAC,+BAAD,CAAN;AACH;AACJ,GAnBM,CAAP;AAoBH","sourcesContent":["import { sign, verify } from 'jsonwebtoken'\r\nimport { vars } from '@/config'\r\n\r\n/**\r\n * Create a new auth token\r\n * @param {Object} payload\r\n * @return {String}\r\n */\r\nexport function CreateToken(payload) {\r\n    return new Promise((resolve, reject) => {\r\n        sign(payload, vars.JWT_SECRET, (err, token) => {\r\n            // check for errors\r\n            if (err) {\r\n                reject(err.message)\r\n            }\r\n\r\n            resolve(token)\r\n        })\r\n    })\r\n}\r\n\r\n/**\r\n * Decode a auth token\r\n * @param {String} token\r\n * @return {Object}\r\n */\r\nexport function DecodeToken(token) {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            // if not token, raise error\r\n            if (!token) {\r\n                reject('Token es requerido')\r\n            }\r\n\r\n            verify(token, vars.JWT_SECRET, (err, decoded) => {\r\n                // if error on verify, raise message\r\n                if (err) {\r\n                    throw err\r\n                }\r\n\r\n                resolve(decoded)\r\n            })\r\n        } catch (error) {\r\n            console.log(`DecodeToken: ${error}`)\r\n            reject('Error al decodificar el token')\r\n        }\r\n    })\r\n}\r\n"],"file":"auth-token.util.js"}