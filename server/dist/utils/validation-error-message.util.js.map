{"version":3,"sources":["../../src/utils/validation-error-message.util.js"],"names":["ValidationErrorMessage","JoiError","Object","prototype","toString","call","_original","String","errorMessage","toReplaceRegex","finalMessage","replace"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACe,SAASA,sBAAT,CAAgCC,QAAhC,EAA0C;AACrD,MACIC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,QAA/B,MAA6C,gBAA7C,IACA,CAACA,QAAQ,CAACK,SAFd,EAGE;AACE,UAAMC,MAAM,CACR,6DADQ,CAAZ;AAGH,GARoD,CAUrD;;;AACA,MAAMC,YAAY,GAAGD,MAAM,CAACN,QAAD,CAA3B,CAXqD,CAYrD;;AACA,MAAMQ,cAAc,GAAG,wBAAvB;AAEA,MAAMC,YAAY,GAAGF,YAAY,CAACG,OAAb,CAAqBF,cAArB,EAAqC,EAArC,CAArB;AAEA,SAAOC,YAAP;AACH","sourcesContent":["/**\r\n * Extract error message from JoiError and return cleaned message error\r\n * @param {Joi.Error} JoiError - Error object provide for Joi schema validation\r\n * @return {String}\r\n */\r\nexport default function ValidationErrorMessage(JoiError) {\r\n    if (\r\n        Object.prototype.toString.call(JoiError) !== '[object Error]' ||\r\n        !JoiError._original\r\n    ) {\r\n        throw String(\r\n            'ValidationErrorMessage: Param value is not a valid JoiError'\r\n        )\r\n    }\r\n\r\n    // get base Joi error message\r\n    const errorMessage = String(JoiError)\r\n    // regex to remove start Joi error message\r\n    const toReplaceRegex = /^(validationerror: )/gi\r\n\r\n    const finalMessage = errorMessage.replace(toReplaceRegex, '')\r\n\r\n    return finalMessage\r\n}\r\n"],"file":"validation-error-message.util.js"}